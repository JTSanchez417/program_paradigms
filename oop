import java.util.ArrayList; //imports array//
import java.util.Scanner; //imports Scanner for user input//

public class LibraryManagement { //distinct calls for library management//

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in); //scan for user input//
        Library library = new Library(); //value for library//

        int choice; //value for user input//
        do { //displays options for user//
            System.out.println("\nLibrary Management System");
            System.out.println("1. Add Book");
            System.out.println("2. List All Books");
            System.out.println("3. Search Book by Title");
            System.out.println("4. Search Book by Author");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt(); //user inputs choice//

            switch (choice) {
                case 1:
                    library.addBook(); //goes to section of adding books//
                    break;
                case 2:
                    library.listBooks(); //goes to section of list of books//
                    break;
                case 3:
                    System.out.print("Enter book title to search: "); 
                    String title = scanner.next(); //user inputs book search by title//
                    library.searchBookByTitle(title);
                    break;
                case 4:
                    System.out.print("Enter author name to search: ");
                    String author = scanner.next(); //user inputs book search by author//
                    library.searchBookByAuthor(author);
                    break;
                case 5:
                    System.out.println("Exiting Library Management System."); //user exits system//
                    break;
                default:
                    System.out.println("Invalid Choice!"); //message when user inputs invalid choice//
            }
        } while (choice != 5);

        scanner.close();
    }
}

class Book { //distinct class for Book//
    private String title;
    private String author;
    private String genre;

    public Book(String title, String author, String genre) {
        this.title = title;
        this.author = author;
        this.genre = genre;
    }

    public String getTitle() {
        return title; //returs value of title//
    }

    public String getAuthor() {
        return author; //returs value of author//
    }

    public String getGenre() {
        return genre; //returs value of author//
    }

    @Override
    public String toString() {
        return "Title: " + title + ", Author: " + author + ", Genre: " + genre;
    }
}

class Library { //distinct class for Library//
    private ArrayList<Book> books; //array for list of books//

    public Library() {
        this.books = new ArrayList<>(); //new array for library//
    }

    public void addBook() { //section for adding books//
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter book title: ");
        String title = scanner.nextLine(); //user inputs book title//
        System.out.print("Enter book author: ");
        String author = scanner.nextLine(); //user inputs book author//
        System.out.print("Enter book genre: ");
        String genre = scanner.nextLine(); //user inputs book genre//

        books.add(new Book(title, author, genre)); //user inputs add book details to list and array//
        System.out.println("Book added successfully!");
    }

    public void listBooks() { //section for displaying list of books//
        if (books.isEmpty()) {
            System.out.println("There are no books in the library."); //message if book list and array is empty//
        } else {
            System.out.println("\nList of Books:");
            for (Book book : books) {
                System.out.println(book);
            }
        }
    }

    public void searchBookByTitle(String title) { //section of book search by title//
        boolean found = false;
        for (Book book : books) {
            if (book.getTitle().equalsIgnoreCase(title)) {
                System.out.println("Book Found:");
                System.out.println(book);
                found = true;
                break;
            }
        }
        if (!found) {
            System.out.println("Book not found!"); //message is book is not found//
        }
    }

    public void searchBookByAuthor(String author) { //section of book search by author//
        boolean found = false;
        for (Book book : books) {
            if (book.getAuthor().equalsIgnoreCase(author)) {
                System.out.println("Book Found:");
                System.out.println(book);
                found = true;
            }
        }
        if (!found) {
            System.out.println("Book not found!"); //message is book is not found//
        }
    }
}
